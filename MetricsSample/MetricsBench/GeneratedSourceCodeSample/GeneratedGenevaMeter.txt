// <auto-generated/>
#nullable enable
    using Microsoft.Cloud.InstrumentationFramework.Metrics.Extensions;
    using Microsoft.R9.Extensions.Meter;

    namespace MetricsBench
    {
        
        [global::System.Runtime.CompilerServices.CompilerGenerated]
        public static partial class GeneratedCounterMetricFactory
        {
            
            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter5D CreateCounter5D(MeterOptions meterOptions, string metricName, string k1, string k2, string k3, string k4, string k5)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName,
                                            nameof(k1), nameof(k2), nameof(k3), nameof(k4), nameof(k5));

                return new Counter5D(cumulativeMetric, k1, k2, k3, k4, k5);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter10D CreateCounter10D(MeterOptions meterOptions, string metricName, string k1, string k2, string k3, string k4, string k5, string k6, string k7, string k8, string k9, string k10)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName,
                                            nameof(k1), nameof(k2), nameof(k3), nameof(k4), nameof(k5), nameof(k6), nameof(k7), nameof(k8), nameof(k9), nameof(k10));

                return new Counter10D(cumulativeMetric, k1, k2, k3, k4, k5, k6, k7, k8, k9, k10);
            }

        }
    
    }
    