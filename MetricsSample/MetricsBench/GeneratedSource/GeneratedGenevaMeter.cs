// <auto-generated/>
#nullable enable
    using Microsoft.Cloud.InstrumentationFramework.Metrics.Extensions;
    using Microsoft.R9.Extensions.Meter;

    namespace MetricsBench
    {
        
        [global::System.Runtime.CompilerServices.CompilerGenerated]
        public static partial class GeneratedCounterMetricFactory
        {
            
            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter5D CreateCounter5D(MeterOptions meterOptions, string metricName, string k1, string k2, string k3, string k4, string k5)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k2", "k3", "k4", "k5"
                                            );

                return new Counter5D(cumulativeMetric, k1, k2, k3, k4, k5);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter10D CreateCounter10D(MeterOptions meterOptions, string metricName, string k1, string k2, string k3, string k4, string k5, string k6, string k7, string k8, string k9, string k10)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k2", "k3", "k4", "k5", "k6", "k7", "k8", "k9", "k10"
                                            );

                return new Counter10D(cumulativeMetric, k1, k2, k3, k4, k5, k6, k7, k8, k9, k10);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter5DNullDim CreateCounter5DNullDim(MeterOptions meterOptions, string metricName, string k1, string k2, string k3, string k4, string k5)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k2", "k3", "k4", "k5"
                                            );

                return new Counter5DNullDim(cumulativeMetric, k1, k2, k3, k4, k5);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter5D1Change CreateCounter5D1Change(MeterOptions meterOptions, string metricName, string k1, string k2, string k4, string k5)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k2", "k4", "k5"
                                            , "k3");

                return new Counter5D1Change(cumulativeMetric, k1, k2, k4, k5);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter5D3Change CreateCounter5D3Change(MeterOptions meterOptions, string metricName, string k1, string k4)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k4"
                                            , "k2", "k3", "k5");

                return new Counter5D3Change(cumulativeMetric, k1, k4);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter10D3Change CreateCounter10D3Change(MeterOptions meterOptions, string metricName, string k1, string k4, string k6, string k7, string k8, string k9, string k10)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k4", "k6", "k7", "k8", "k9", "k10"
                                            , "k2", "k3", "k5");

                return new Counter10D3Change(cumulativeMetric, k1, k4, k6, k7, k8, k9, k10);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter10D5Change CreateCounter10D5Change(MeterOptions meterOptions, string metricName, string k1, string k4, string k6, string k8, string k10)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            , "k1", "k4", "k6", "k8", "k10"
                                            , "k2", "k3", "k5", "k7", "k9");

                return new Counter10D5Change(cumulativeMetric, k1, k4, k6, k8, k10);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            public static Counter10D10Change CreateCounter10D10Change(MeterOptions meterOptions, string metricName)
            {
                var cumulativeMetric = meterOptions.MdmMetricFactory.CreateUInt64CumulativeMetric(
                                            MdmMetricFlags.CumulativeMetricDefault,
                                            meterOptions.MonitoringAccount,
                                            meterOptions.MetricNamespace,
                                            metricName
                                            
                                            , "k1", "k4", "k6", "k8", "k10", "k2", "k3", "k5", "k7", "k9");

                return new Counter10D10Change(cumulativeMetric);
            }

        }
    
    }
    